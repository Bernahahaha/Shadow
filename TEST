-- ======================= Load Libraries =======================
local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()

-- ======================= GUI Setup =======================
local guiWidth, guiHeight = 580, 460

local Window = Fluent:CreateWindow({
    Title = "ShadowCore " .. Fluent.Version,
    SubTitle = "by Sin",
    TabWidth = 160,
    Size = UDim2.fromOffset(guiWidth, guiHeight),
    Acrylic = true,
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.LeftControl
})

local Options = Fluent.Options

-- ======================= Tabs =======================
local Tabs = {
    Main = Window:AddTab({ Title = "Main", Icon = "home" }),
    Automation = Window:AddTab({ Title = "Automation", Icon = "robot" }),
    Fun = Window:AddTab({ Title = "Fun", Icon = "smile" }),
    AutoBandage = Window:AddTab({ Title = "Auto Bandage", Icon = "heart" }),
    BringStuff = Window:AddTab({ Title = "Bring Stuff", Icon = "hand" }),
    LocalPlayer = Window:AddTab({ Title = "Local Player", Icon = "user" }),
    Teleport = Window:AddTab({ Title = "Teleport", Icon = "arrow-up-right" }),
    Settings = Window:AddTab({ Title = "Settings", Icon = "settings" })
}

-- ======================= Main Tab Elements =======================
do
    Tabs.Main:AddParagraph({
        Title = "Welcome",
        Content = "ShadowCore GUI by Sin.\nUse the tabs to access features!"
    })

    -- Example Notification
    Fluent:Notify({
        Title = "Notification",
        Content = "Welcome to ShadowCore!",
        Duration = 5
    })
end

-- ======================= Automation Tab Elements =======================
do
    Tabs.Automation:AddParagraph({
        Title = "Automation",
        Content = "Here you can enable general automation features."
    })
end

-- ======================= Fun Tab Elements =======================
do
    Tabs.Fun:AddButton({
        Title = "Fun Button",
        Description = "Just for fun!",
        Callback = function()
            print("Fun feature clicked!")
            -- Add your fun logic here
        end
    })
end

-- ======================= Auto Bandage Tab =======================
do
    local AutoBandage = Tabs.AutoBandage:AddToggle("AutoBandage", {
        Title = "Auto Bandage",
        Description = "Automatically heals your player.",
        Default = false
    })
    AutoBandage:OnChanged(function(State)
        task.spawn(function()
            while State do
                task.wait(1)
                local player = game.Players.LocalPlayer
                if player.Character and player.Character:FindFirstChild("Humanoid") then
                    local humanoid = player.Character.Humanoid
                    if humanoid.Health < humanoid.MaxHealth then
                        humanoid.Health = humanoid.MaxHealth
                        print("Healed player!")
                    end
                end
                if not AutoBandage.Value then break end
            end
        end)
    end)
end

-- ======================= Bring Stuff Tab =======================
do
    Tabs.BringStuff:AddButton({
        Title = "Bring Stuff",
        Description = "Bring all items to your location",
        Callback = function()
            local player = game.Players.LocalPlayer
            local root = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
            if not root then return end
            for _, obj in pairs(workspace:GetDescendants()) do
                if obj:IsA("BasePart") and obj.Name:match("Item") then
                    obj.CFrame = root.CFrame + Vector3.new(0,5,0)
                    print("Brought object:", obj.Name)
                end
            end
        end
    })
end

-- ======================= Local Player Tab =======================
do
    Tabs.LocalPlayer:AddButton({
        Title = "Reset Character",
        Description = "Resets your character",
        Callback = function()
            local player = game.Players.LocalPlayer
            if player.Character then
                player.Character:BreakJoints()
                print("Character reset!")
            end
        end
    })
end

-- ======================= Teleport Tab =======================
do
    -- Teleport Input
    Tabs.Teleport:AddInput("TeleportInput", {
        Title = "Teleport To (x,y,z)",
        Default = "0,0,0",
        Placeholder = "Enter coordinates like 0,5,0",
        Callback = function(Value)
            local player = game.Players.LocalPlayer
            local root = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
            if root then
                local x, y, z = Value:match("([^,]+),([^,]+),([^,]+)")
                x, y, z = tonumber(x), tonumber(y), tonumber(z)
                if x and y and z then
                    root.CFrame = CFrame.new(x,y,z)
                    print("Teleported to:", x, y, z)
                else
                    print("Invalid coordinates!")
                end
            end
        end
    })

    -- Teleport Keybind
    Tabs.Teleport:AddKeybind("TeleportKey", {
        Title = "Teleport Key",
        Mode = "Toggle",
        Default = "F",
        Callback = function()
            local player = game.Players.LocalPlayer
            local root = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
            if root then
                root.CFrame = CFrame.new(0,10,0) -- preset location
                print("Teleported to preset location!")
            end
        end
    })
end

-- ======================= Settings Tab =======================
do
    SaveManager:SetLibrary(Fluent)
    InterfaceManager:SetLibrary(Fluent)
    SaveManager:IgnoreThemeSettings()
    SaveManager:SetIgnoreIndexes({})
    InterfaceManager:SetFolder("FluentScriptHub")
    SaveManager:SetFolder("FluentScriptHub/specific-game")
    InterfaceManager:BuildInterfaceSection(Tabs.Settings)
    SaveManager:BuildConfigSection(Tabs.Settings)
end

-- ======================= Initialize GUI =======================
Window:SelectTab(1)
Fluent:Notify({ Title = "ShadowCore", Content = "The script has been loaded.", Duration = 8 })
SaveManager:LoadAutoloadConfig()

