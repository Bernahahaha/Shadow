local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()

-- Create the main window
local Window = Fluent:CreateWindow({
    Title = "ShadowCore",
    SubTitle = "By Sin",
    TabWidth = 160,
    Size = UDim2.fromOffset(580, 460),
    Acrylic = true,
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.LeftControl
})

-- Minimize button
local MinimizeButton = Instance.new("TextButton")
MinimizeButton.BackgroundTransparency = 1
MinimizeButton.Size = UDim2.new(0, 40, 0, 40)
MinimizeButton.Position = UDim2.new(1, -45, 0, 5)
MinimizeButton.Parent = Window.Frame
MinimizeButton.Text = ""

local Icon = Instance.new("ImageLabel")
Icon.Image = "rbxassetid://111720145628" -- replace with your icon
Icon.Size = UDim2.new(1, 0, 1, 0)
Icon.BackgroundTransparency = 1
Icon.Parent = MinimizeButton

local Aspect = Instance.new("UIAspectRatioConstraint")
Aspect.AspectRatio = 1
Aspect.AspectType = Enum.AspectType.FitWithinMaxSize
Aspect.Parent = Icon

MinimizeButton.MouseButton1Click:Connect(function()
    Window.Frame.Visible = not Window.Frame.Visible
end)

-- Tabs
local Tabs = {
    Main = Window:AddTab({ Title = "Main", Icon = "" }),
    Settings = Window:AddTab({ Title = "Settings", Icon = "settings" })
}

local Options = Fluent.Options

do
    Fluent:Notify({
        Title = "Notification",
        Content = "This is a notification",
        SubContent = "SubContent",
        Duration = 5
    })

    Tabs.Main:AddParagraph({
        Title = "Paragraph",
        Content = "This is a paragraph.\nSecond line!"
    })

    Tabs.Main:AddButton({
        Title = "Button",
        Description = "Very important button",
        Callback = function()
            Window:Dialog({
                Title = "Title",
                Content = "This is a dialog",
                Buttons = {
                    { Title = "Confirm", Callback = function() print("Confirmed") end },
                    { Title = "Cancel", Callback = function() print("Cancelled") end }
                }
            })
        end
    })

    -- Toggle
    local Toggle = Tabs.Main:AddToggle("MyToggle", {Title = "Toggle", Default = false})
    Toggle:OnChanged(function() print("Toggle changed:", Options.MyToggle.Value) end)
    Options.MyToggle:SetValue(false)

    -- Slider
    local Slider = Tabs.Main:AddSlider("Slider", {Title = "Slider", Description = "This is a slider", Default = 2, Min = 0, Max = 5, Rounding = 1, Callback = function(Value) print("Slider:", Value) end})
    Slider:OnChanged(function(Value) print("Slider changed:", Value) end)
    Slider:SetValue(3)
end

-- Addons
SaveManager:SetLibrary(Fluent)
InterfaceManager:SetLibrary(Fluent)
SaveManager:IgnoreThemeSettings()
InterfaceManager:SetFolder("ShadowCoreScriptHub")
SaveManager:SetFolder("ShadowCoreScriptHub/specific-game")
InterfaceManager:BuildInterfaceSection(Tabs.Settings)
SaveManager:BuildConfigSection(Tabs.Settings)

Window:SelectTab(1)

Fluent:Notify({
    Title = "ShadowCore",
    Content = "The script has been loaded.",
    Duration = 8
})

SaveManager:LoadAutoloadConfig()
